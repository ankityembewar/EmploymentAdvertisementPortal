"use strict";import OrganizationPoint from"./OrganizationPoint.js";import OrganizationSeriesDefaults from"./OrganizationSeriesDefaults.js";import SeriesRegistry from"../../Core/Series/SeriesRegistry.js";import PathUtilities from"../PathUtilities.js";const SankeySeries=SeriesRegistry.seriesTypes["sankey"];import U from"../../Core/Utilities.js";const{css,extend,isNumber,merge,pick}=U;class OrganizationSeries extends SankeySeries{alignDataLabel(t,s,n){t=t.shapeArgs;if(n.useHTML&&t){n=this.options.borderWidth+2*this.options.dataLabels.padding;let i=t.width||0,e=t.height||0;this.chart.inverted&&(i=e,e=t.width||0),e-=n,i-=n;t=s.text;t&&(css(t.element.parentNode,{width:i+"px",height:e+"px"}),css(t.element,{left:0,top:0,width:"100%",height:"100%",overflow:"hidden"})),s.getBBox=()=>({width:i,height:e,x:0,y:0}),s.width=i,s.height=e}super.alignDataLabel.apply(this,arguments)}createNode(i){const e=super.createNode.call(this,i);return e.getSum=()=>1,e}pointAttribs(i,e){const t=this,s=SankeySeries.prototype.pointAttribs.call(t,i,e),n=(i.isNode?i:i.fromNode).level,a=t.mapOptionsToLevel[n||0]||{},r=i.options,o=a.states&&a.states[e]||{},h=pick(o.borderRadius,r.borderRadius,a.borderRadius,t.options.borderRadius),l=pick(o.linkColor,r.linkColor,a.linkColor,t.options.linkColor,o.link&&o.link.color,r.link&&r.link.color,a.link&&a.link.color,t.options.link&&t.options.link.color),p=pick(o.linkLineWidth,r.linkLineWidth,a.linkLineWidth,t.options.linkLineWidth,o.link&&o.link.lineWidth,r.link&&r.link.lineWidth,a.link&&a.link.lineWidth,t.options.link&&t.options.link.lineWidth),g=pick(o.linkOpacity,r.linkOpacity,a.linkOpacity,t.options.linkOpacity,o.link&&o.link.linkOpacity,r.link&&r.link.linkOpacity,a.link&&a.link.linkOpacity,t.options.link&&t.options.link.linkOpacity);return i.isNode?isNumber(h)&&(s.r=h):(s.stroke=l,s["stroke-width"]=p,s.opacity=g,delete s.fill),s}translateLink(a){var r=this.chart,o=this.options,h=a.fromNode,l=a.toNode,p=pick(o.linkLineWidth,o.link.lineWidth),g=Math.round(p)%2/2,d=pick(o.link.offset,.5),k=pick(a.options.link&&a.options.link.type,o.link.type);if(h.shapeArgs&&l.shapeArgs){var c=o.hangingIndent,y="right"===o.hangingSide,f=l.options.offset,f=/%$/.test(f)&&parseInt(f,10),A=r.inverted;let i=Math.floor((h.shapeArgs.x||0)+(h.shapeArgs.width||0))+g,e=Math.floor((h.shapeArgs.y||0)+(h.shapeArgs.height||0)/2)+g,t=Math.floor(l.shapeArgs.x||0)+g,s=Math.floor((l.shapeArgs.y||0)+(l.shapeArgs.height||0)/2)+g,n;A&&(i-=h.shapeArgs.width||0,t+=l.shapeArgs.width||0),n=this.colDistance?Math.floor(t+(A?1:-1)*(this.colDistance-this.nodeWidth)/2)+g:Math.floor((t+i)/2)+g,f&&(50<=f||f<=-50)&&(n=t=Math.floor(t+(A?-.5:.5)*(l.shapeArgs.width||0))+g,s=l.shapeArgs.y||0,0<f&&(s+=l.shapeArgs.height||0)),l.hangsFrom===h&&(r.inverted?(e=y?Math.floor((h.shapeArgs.y||0)+c/2)+g:Math.floor((h.shapeArgs.y||0)+(h.shapeArgs.height||0)-c/2)+g,s=y?(l.shapeArgs.y||0)+c/2:(l.shapeArgs.y||0)+(l.shapeArgs.height||0)):e=Math.floor((h.shapeArgs.y||0)+c/2)+g,n=t=Math.floor((l.shapeArgs.x||0)+(l.shapeArgs.width||0)/2)+g),a.plotX=n,a.plotY=(e+s)/2,a.shapeType="path","straight"===k?a.shapeArgs={d:[["M",i,e],["L",t,s]]}:"curved"===k?(f=Math.abs(t-i)*d*(A?-1:1),a.shapeArgs={d:[["M",i,e],["C",i+f,e,t-f,s,t,s]]}):a.shapeArgs={d:PathUtilities.applyRadius([["M",i,e],["L",n,e],["L",n,s],["L",t,s]],pick(o.linkRadius,o.link.radius))},a.dlBox={x:(i+t)/2,y:(e+s)/2,height:p,width:0}}}translateNode(i,e){super.translateNode(i,e);const t=this.chart,s=this.options,n=i.getSum(),a=this.translationFactor,r=Math.max(Math.round(n*a),s.minLinkWidth||0),o="right"===s.hangingSide,h=s.hangingIndent||0,l=s.hangingIndentTranslation,p=s.minNodeLength||10,g=Math.round(this.nodeWidth),d=i.shapeArgs,k=t.inverted?-1:1;let c=i.hangsFrom;if(c)if("cumulative"===l)for(d.height-=h,t.inverted&&!o&&(d.y-=k*h);c;)d.y+=(o?1:k)*h,c=c.hangsFrom;else if("shrink"===l)for(;c&&d.height>h+p;)d.height-=h,t.inverted&&!o||(d.y+=h),c=c.hangsFrom;else d.height-=h,t.inverted&&!o||(d.y+=h);i.nodeHeight=t.inverted?d.width:d.height,i.shapeArgs&&!i.hangsFrom&&(i.shapeArgs=merge(i.shapeArgs,{x:(i.shapeArgs.x||0)+g/2-(i.shapeArgs.width||0)/2,y:(i.shapeArgs.y||0)+r/2-(i.shapeArgs.height||0)/2}))}drawDataLabels(){var i=this.options.dataLabels;if(i.linkTextPath&&i.linkTextPath.enabled)for(const e of this.points)e.options.dataLabels=merge(e.options.dataLabels,{useHTML:!1});super.drawDataLabels()}}OrganizationSeries.defaultOptions=merge(SankeySeries.defaultOptions,OrganizationSeriesDefaults),extend(OrganizationSeries.prototype,{pointClass:OrganizationPoint}),SeriesRegistry.registerSeriesType("organization",OrganizationSeries);export default OrganizationSeries;