!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/indicators/accumulation-distribution",["highcharts","highcharts/modules/stock"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,o,i){e.hasOwnProperty(t)||(e[t]=i.apply(null,o),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Stock/Indicators/AD/ADIndicator.js",[e["Core/Series/SeriesRegistry.js"],e["Core/Utilities.js"]],function(e,t){var o=e.seriesTypes["sma"];const{error:m,extend:i,merge:s}=t;class g extends o{static populateAverage(e,t,o,i,s){var n=t[i][1],r=t[i][2],t=t[i][3],o=o[i];return[e[i],t===n&&t===r||n===r?0:(2*t-r-n)/(n-r)*o]}getValues(e,t){const o=t.period,i=e.xData,s=e.yData,n=t.volumeSeriesID,r=e.chart.get(n),a=r&&r.yData,u=s?s.length:0,c=[],d=[],l=[];let h,p,f;if(!(i.length<=o&&u&&4!==s[0].length)){if(r){for(p=o;p<u;p++)h=c.length,f=g.populateAverage(i,s,a,p,o),0<h&&(f[1]+=c[h-1][1]),c.push(f),d.push(f[0]),l.push(f[1]);return{values:c,xData:d,yData:l}}m("Series "+n+" not found! Check `volumeSeriesID`.",!0,e.chart)}}}return g.defaultOptions=s(o.defaultOptions,{params:{index:void 0,volumeSeriesID:"volume"}}),i(g.prototype,{nameComponents:!1,nameBase:"Accumulation/Distribution"}),e.registerSeriesType("ad",g),g}),t(e,"masters/indicators/accumulation-distribution.src.js",[e["Core/Globals.js"]],function(e){return e})});