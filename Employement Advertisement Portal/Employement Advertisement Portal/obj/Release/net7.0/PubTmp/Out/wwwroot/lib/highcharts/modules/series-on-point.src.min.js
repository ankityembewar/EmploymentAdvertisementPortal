!function(t){"object"==typeof module&&module.exports?module.exports=t.default=t:"function"==typeof define&&define.amd?define("highcharts/modules/series-on-point",["highcharts"],function(e){return t(e),t.Highcharts=e,t}):t("undefined"!=typeof Highcharts?Highcharts:void 0)}(function(e){"use strict";e=e?e._modules:{};function t(e,t,s,i){e.hasOwnProperty(t)||(e[t]=i.apply(null,s),"function"==typeof CustomEvent&&window.dispatchEvent(new CustomEvent("HighchartsModuleLoaded",{detail:{path:t,module:e[t]}})))}t(e,"Series/SeriesOnPointComposition.js",[e["Core/Globals.js"],e["Core/Series/Point.js"],e["Core/Series/Series.js"],e["Core/Series/SeriesRegistry.js"],e["Core/Renderer/SVG/SVGRenderer.js"],e["Core/Utilities.js"]],function(e,u,t,s,l,i){const a=e["composed"],o=s.seriesTypes["bubble"],{addEvent:d,defined:m,find:r,isNumber:n,pushUnique:p}=i;var h;{(e=h=h||{}).compose=function(e,t){var s,i,o,r,n,h;return p(a,"SeriesOnPoint")&&({chartGetZData:s,seriesAfterInit:i,seriesAfterRender:o,seriesGetCenter:r,seriesShowOrHide:n,seriesTranslate:h}=c.prototype,e.types.pie.prototype.onPointSupported=!0,d(e,"afterInit",i),d(e,"afterRender",o),d(e,"afterGetCenter",r),d(e,"hide",n),d(e,"show",n),d(e,"translate",h),d(t,"beforeRender",s),d(t,"beforeRedraw",s)),e};class c{constructor(e){this.getRadii=o.prototype.getRadii,this.getRadius=o.prototype.getRadius,this.getPxExtremes=o.prototype.getPxExtremes,this.getZExtremes=o.prototype.getZExtremes,this.chart=e.chart,this.series=e,this.options=e.options.onPoint}drawConnector(){this.connector||(this.connector=this.series.chart.renderer.path().addClass("highcharts-connector-seriesonpoint").attr({zIndex:-1}).add(this.series.markerGroup));var e=this.getConnectorAttributes();e&&this.connector.animate(e)}getConnectorAttributes(){const e=this.series.chart,t=this.options;if(t){var s=t.connectorOptions||{},i=t.position,o=e.get(t.id);if(o instanceof u&&i&&m(o.plotX)&&m(o.plotY)){const r=m(i.x)?i.x:o.plotX,n=m(i.y)?i.y:o.plotY,h=r+(i.offsetX||0),a=n+(i.offsetY||0),d=s.width||1,p=s.stroke||this.series.color,c=s.dashstyle,f={d:l.prototype.crispLine([["M",r,n],["L",h,a]],d,"ceil"),"stroke-width":d};return e.styledMode||(f.stroke=p,f.dashstyle=c),f}}}seriesAfterInit(){this.onPointSupported&&this.options.onPoint&&(this.bubblePadding=!0,this.useMapGeometry=!0,this.onPoint=new c(this))}seriesAfterRender(){delete this.chart.bubbleZExtremes,this.onPoint&&this.onPoint.drawConnector()}seriesGetCenter(e){const t=this.options.onPoint,s=e.positions;t&&((i=this.chart.get(t.id))instanceof u&&m(i.plotX)&&m(i.plotY)&&(s[0]=i.plotX,s[1]=i.plotY),(i=t.position)&&(m(i.x)&&(s[0]=i.x),m(i.y)&&(s[1]=i.y),i.offsetX&&(s[0]+=i.offsetX),i.offsetY&&(s[1]+=i.offsetY)));var i=this.radii&&this.radii[this.index];n(i)&&(s[2]=2*i),e.positions=s}seriesShowOrHide(){const s=this.chart.series;this.points.forEach(t=>{const e=r(s,e=>{e=((e.onPoint||{}).options||{}).id;return!!e&&e===t.id});e&&e.setVisible(!e.visible,!1)})}seriesTranslate(){this.onPoint&&(this.onPoint.getRadii(),this.radii=this.onPoint.radii)}chartGetZData(){const t=[];this.series.forEach(e=>{e=e.options.onPoint;t.push(e&&e.z?e.z:null)}),this.series.forEach(e=>{e.onPoint&&(e.onPoint.zData=e.zData=t)})}}e.Additions=c}return h}),t(e,"masters/modules/series-on-point.src.js",[e["Core/Globals.js"],e["Series/SeriesOnPointComposition.js"]],function(e,t){return t.compose(e.Series,e.Chart),e})});