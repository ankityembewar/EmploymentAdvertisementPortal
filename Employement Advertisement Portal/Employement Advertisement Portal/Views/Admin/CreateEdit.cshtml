@model EAP.ViewModel.EmployeeViewModel

@{
    ViewData["Title"] = "CreateEdit";
}

@if (!string.IsNullOrEmpty(ViewData["ErrorMessage"] as string))
{
    <div id="errorMessage" class="alert alert-danger fade-out text-center">
        <div class="row">
            <div class="col">
                @ViewData["ErrorMessage"]
            </div>
        </div>
    </div>
    ViewData["ErrorMessage"] = string.Empty;
}

<div class="container d-flex justify-content-center align-items-center" @* style="height: 100vh;" *@>
<div class="card" style="width: 70%;">
    <div class="card-header">
            <h5>@(Model.EmpId == 0 ? "Add Employee" : "Update Employee Details")</h5>
    </div>
    <div class="card-body">
            <form id="createEditForm" onsubmit="submitEmployeeForm(event)">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="FirstName" class="control-label"></label>
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="LastName" class="control-label"></label>
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="form-group">
                            <label asp-for="Dob" class="control-label"></label>
                            <input asp-for="Dob" type="date" class="form-control" />
                                <span id="DobValidation" class="text-danger"></span>
                        </div>
                    </div>
                        <div class="form-group">
                            <label class="control-label">Gender</label><br>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="Gender" value="Male" id="genderMale">
                                <label class="form-check-label" for="genderMale">Male</label>
                            </div>
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="radio" asp-for="Gender" value="Female" id="genderFemale">
                                <label class="form-check-label" for="genderFemale">Female</label>
                            </div>
                            <span asp-validation-for="Gender" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="RoleId" class="control-label">Role</label>
                            @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.EmployeeRole, "Value", "Text"), "-- Select Role --", new { @class = "form-control", required = "required" })
                            <span id="RoleValidation" class="text-danger"></span>
                        </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" type="email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Address" class="control-label"></label>
                        <input asp-for="Address" class="form-control" />
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>
                </div>
            </div>
            @Html.HiddenFor(x=>x.EmployeeRole)
            @Html.HiddenFor(x => x.EmpId)
            @Html.HiddenFor(x => x.CreatedBy)
            @Html.HiddenFor(x => x.CreatedDate)
            @Html.HiddenFor(x => x.ModifiedDate)
            @Html.HiddenFor(x => x.ModifiedBy)
        </form>
    </div>
    <div class="card-footer">
        <div class="text-center">
            <a asp-action="Index" class="btn btn-secondary mr-2">Back to List</a>
                <button type="submit" form="createEditForm" class="btn btn-success">Save</button>
        </div>
    </div>
</div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script src="~/js/admin.js"></script>
    }
}
